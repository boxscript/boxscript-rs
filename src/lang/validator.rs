use std::collections::HashMap;

// why doesn't rust have map literal syntax? this code makes me sad…

lazy_static! {
    static ref ADJACENT: HashMap<char, HashMap<char, Vec<char>>> = [
        (
            '─',
            [
                ('E', vec!['─', '┐', '┘', '┤', '┦', '┧']),
                ('W', vec!['─', '┌', '└', '├', '┞', '┟']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '━',
            [
                ('E', vec!['━', '┓', '┛', '┩', '┪', '┫']),
                ('W', vec!['━', '┏', '┗', '┡', '┢', '┣']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '│',
            [
                ('N', vec!['│', '┌', '┐', '├', '┞', '┡', '┤', '┦', '┩']),
                ('S', vec!['│', '└', '┘', '├', '┟', '┢', '┤', '┧', '┪']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┃',
            [
                ('N', vec!['┃', '┏', '┓', '┟', '┢', '┣', '┧', '┪', '┫']),
                ('S', vec!['┃', '┗', '┛', '┞', '┡', '┣', '┦', '┩', '┫']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┌',
            [('E', vec!['─', '┐']), ('S', vec!['│', '└', '├', '┟', '┢'])]
                .iter()
                .cloned()
                .collect(),
        ),
        (
            '┏',
            [('E', vec!['━', '┓']), ('S', vec!['┃', '┗', '┞', '┡', '┣'])]
                .iter()
                .cloned()
                .collect(),
        ),
        (
            '┐',
            [('S', vec!['│', '┘', '┤', '┧', '┪']), ('W', vec!['─', '┌'])]
                .iter()
                .cloned()
                .collect(),
        ),
        (
            '┓',
            [('S', vec!['┃', '┛', '┦', '┩', '┫']), ('W', vec!['━', '┏'])]
                .iter()
                .cloned()
                .collect(),
        ),
        (
            '└',
            [('N', vec!['│', '┌', '├', '┞', '┡']), ('E', vec!['─', '┘'])]
                .iter()
                .cloned()
                .collect(),
        ),
        (
            '┗',
            [('N', vec!['┃', '┏', '┟', '┢', '┣']), ('E', vec!['━', '┛'])]
                .iter()
                .cloned()
                .collect(),
        ),
        (
            '┘',
            [('N', vec!['│', '┐', '┤', '┦', '┩']), ('W', vec!['─', '└'])]
                .iter()
                .cloned()
                .collect(),
        ),
        (
            '┛',
            [('N', vec!['┃', '┓', '┧', '┪', '┫']), ('W', vec!['━', '┗'])]
                .iter()
                .cloned()
                .collect(),
        ),
        (
            '├',
            [
                ('N', vec!['│', '┌', '├', '┞', '┡']),
                ('E', vec!['─', '┤']),
                ('S', vec!['│', '└', '├', '┟', '┢']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┞',
            [
                ('N', vec!['┃', '┏', '┟', '┢', '┣']),
                ('E', vec!['─', '┦']),
                ('S', vec!['│', '└', '├', '┟', '┢']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┟',
            [
                ('N', vec!['│', '┌', '├', '┞', '┡']),
                ('E', vec!['─', '┧']),
                ('S', vec!['┃', '┗', '┞', '┡', '┣']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┡',
            [
                ('N', vec!['┃', '┏', '┟', '┢', '┣']),
                ('E', vec!['━', '┩']),
                ('S', vec!['│', '└', '├', '┟', '┢']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┢',
            [
                ('N', vec!['│', '┌', '├', '┞', '┡']),
                ('E', vec!['━', '┪']),
                ('S', vec!['┃', '┗', '┞', '┡', '┣']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┣',
            [
                ('N', vec!['┃', '┏', '┟', '┢', '┣']),
                ('E', vec!['━', '┫']),
                ('S', vec!['┃', '┗', '┞', '┡', '┣']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┤',
            [
                ('N', vec!['│', '┐', '┤', '┦', '┩']),
                ('S', vec!['│', '┘', '┤', '┧', '┪']),
                ('W', vec!['─', '├']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┦',
            [
                ('N', vec!['┃', '┓', '┧', '┪', '┫']),
                ('S', vec!['│', '┘', '┤', '┧', '┪']),
                ('W', vec!['─', '┞']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┧',
            [
                ('N', vec!['│', '┐', '┤', '┦', '┩']),
                ('S', vec!['┃', '┛', '┦', '┩', '┫']),
                ('W', vec!['─', '┟']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┩',
            [
                ('N', vec!['┃', '┓', '┧', '┪', '┫']),
                ('S', vec!['│', '┘', '┤', '┧', '┪']),
                ('W', vec!['━', '┡']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┪',
            [
                ('N', vec!['│', '┐', '┤', '┦', '┩']),
                ('S', vec!['┃', '┛', '┦', '┩', '┫']),
                ('W', vec!['━', '┢']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '┫',
            [
                ('N', vec!['┃', '┓', '┧', '┪', '┫']),
                ('S', vec!['┃', '┛', '┦', '┩', '┫']),
                ('W', vec!['━', '┣']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '═',
            [
                ('E', vec!['═', '╗', '╝', '╣']),
                ('W', vec!['═', '╔', '╚', '╠']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '║',
            [
                ('N', vec!['║', '╔', '╗', '╠', '╣']),
                ('S', vec!['║', '╚', '╝', '╠', '╣']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '╔',
            [('E', vec!['═', '╗']), ('S', vec!['║', '╚', '╠'])]
                .iter()
                .cloned()
                .collect(),
        ),
        (
            '╗',
            [('S', vec!['║', '╝', '╣']), ('W', vec!['═', '╔'])]
                .iter()
                .cloned()
                .collect(),
        ),
        (
            '╚',
            [('N', vec!['║', '╔', '╠']), ('E', vec!['═', '╝'])]
                .iter()
                .cloned()
                .collect(),
        ),
        (
            '╝',
            [('N', vec!['║', '╗', '╣']), ('W', vec!['═', '╚'])]
                .iter()
                .cloned()
                .collect(),
        ),
        (
            '╠',
            [
                ('N', vec!['║', '╔', '╠']),
                ('E', vec!['═', '╣']),
                ('S', vec!['║', '╚', '╠']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
        (
            '╣',
            [
                ('N', vec!['║', '╗', '╣']),
                ('S', vec!['║', '╝', '╣']),
                ('W', vec!['═', '╠']),
            ]
            .iter()
            .cloned()
            .collect(),
        ),
    ]
    .iter()
    .cloned()
    .collect();
}
